{"version":3,"sources":["panels/Info.js","panels/Home.js","App.js","index.js"],"names":["Info","xhr","XMLHttpRequest","open","send","status","alert","statusText","result","JSON","parse","responseText","content","i","length","item","push","src","class","Home","id","fetchedUser","frameborder","width","height","App","useState","scheme","setScheme","activePanel","setUser","popout","setPopout","useEffect","a","bridge","user","subscribe","detail","type","data","fetchData","ReactDOM","render","document","getElementById"],"mappings":"wNAqDeA,EAnDD,WA2BV,IAAIC,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,MAAO,mGAAmG,GACnHF,EAAIG,OACc,KAAdH,EAAII,OAENC,MAAOL,EAAII,OAAS,KAAOJ,EAAIM,iBAW/B,IAFA,IAAIC,EAASC,KAAKC,MAAMT,EAAIU,cAAf,OACTC,EAAU,GACLC,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAAK,CACtC,IAAME,EAAOP,EAAOK,GACpBD,EAAQI,KAAK,gCAAK,qBAAaC,IAAOF,EAAK,IAAfF,GAAoB,6BAAaE,EAAK,IAATF,OAG7D,OAAS,sBAAKK,MAAQ,OAAb,cAAsBN,EAAtB,QC9BEO,EAdF,SAAC,GAAwB,EAAtBC,GAAsB,EAAlBC,YAGnB,OACA,sBAAKH,MAAO,SAAZ,UACC,cAAC,EAAD,IACA,wBAAQD,IAAI,qFAAqFK,YAAY,IAAIC,MAAM,OAAOC,OAAO,aCuCxHC,EA1CH,WACX,MAA4BC,mBAAS,gBAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,QAA/C,mBAAOG,EAAP,KACA,GADA,KAC+BH,mBAAS,OAAxC,mBAAOL,EAAP,KAAoBS,EAApB,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAO/B,KAAK,uBADhC,OACOgC,EADP,OAECN,EAAQM,GACRJ,EAAU,MAHX,4CAPe,sBACfG,IAAOE,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACtB,yBAATD,GACHX,EAAUY,EAAKb,WAHF,mCAYfc,KACE,IAIF,cAAC,IAAD,CAAgBd,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaI,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMF,YAAaA,EAAnB,UACA,cAAC,EAAD,CAAMT,GAAG,OAAOC,YAAaA,IAC5B,qBAAKD,GAAI,uBCjCjBe,IAAO/B,KAAK,gBAEZsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b8b0b870.chunk.js","sourcesContent":["\r\n\r\nconst Info =  () => {\r\n    /*var app = \"https://script.google.com/macros/s/AKfycbweQQLq_RF5hHRhklUHcycG4ZU1MvIRKdfsP7eKgovrjhqA-io/exec\",\r\n     output = '',\r\n     xhr = new XMLHttpRequest();\r\n    xhr.open('GET', app);\r\n    var r;\r\n    var result;\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState !== 4) return;\r\n      if (xhr.status == 200) {\r\n        try {\r\n          r = JSON.parse(xhr.responseText);\r\n          result = r[\"result\"];\r\n          //for (var i = 0; i < result.length; i++){\r\n            //var obj = r[\"result\"][i];\r\n            //console.log(obj);\r\n            //output += obj.join(\"<br/>\") + \"<br/><hr/>\";\r\n          //}\r\n\r\n            \r\n         } catch(e) {}\r\n      } \r\n      \r\n    //document.getElementById('root').innerHTML = output;\r\n    }\r\n    xhr.send()*/\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', 'https://script.google.com/macros/s/AKfycbweQQLq_RF5hHRhklUHcycG4ZU1MvIRKdfsP7eKgovrjhqA-io/exec', false);\r\n    xhr.send();\r\n    if (xhr.status != 200) {\r\n      // обработать ошибку\r\n      alert( xhr.status + ': ' + xhr.statusText ); // пример вывода: 404: Not Found\r\n    } else {\r\n      /*\r\n      // вывести результат\r\n      alert(JSON.parse(xhr.responseText)[\"result\"]); // responseText -- текст ответа.\r\n      var f = JSON.parse(xhr.responseText)[\"result\"].map((item, index) => (\r\n        <div key={index}><h1>{item}</h1></div>\r\n      ));\r\n      */\r\n      var result = JSON.parse(xhr.responseText)[\"result\"];\r\n      var content = [];\r\n      for (let i = 0; i < result.length; i++) {\r\n        const item = result[i];\r\n        content.push(<div><img key={i} src = {item[1]}/><h1 key={i}>{item[2]}</h1></div>);\r\n      }\r\n    }\r\n    return ( <div class = \"text\"> {content} </div>);\r\n};\r\n\r\nexport default Info;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Info from './Info'\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, fetchedUser }) => {\n\t//return (<Info/>);\n\t//return (<iframe src='https://my.spline.design/officedesktopsoundscopy-87a6594c1536b4b2cf2c810d45a9667a/' frameBorder='0' width='80%' height='80%'></iframe>);\n\treturn(\n\t<div class =\"parent\">\n\t\t<Info/>\n\t\t<iframe src='https://my.spline.design/officedesktopsoundscopy-87a6594c1536b4b2cf2c810d45a9667a/' frameborder='0' width='100%' height='100%'></iframe>\n\t</div>);\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Info from './panels/Info';\n\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n//////<Home id='home' fetchedUser={fetchedUser} go={go} />\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} />\n\t\t\t\t\t\t\t\t<div id ='info'>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n//if (process.env.NODE_ENV === \"development\") {\n//  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n//}\n"],"sourceRoot":""}